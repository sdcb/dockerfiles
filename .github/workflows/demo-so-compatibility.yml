name: glibc-compat-test

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/demo-so-compatibility.yml
################################################################################
# Job-1: 在 Ubuntu 22.04 构建并初步测试
################################################################################
jobs:
  build-ubuntu-2204:
    runs-on: ubuntu-22.04

    steps:
    # ① 生成示例源码
    - name: Generate example sources
      run: |
        cat > add.h <<'EOF'
        #pragma once
        int add(int a, int b);
        EOF

        # 让库内部使用 printf -> 产生对 glibc 的依赖
        cat > add.c <<'EOF'
        #include <stdio.h>
        int add(int a, int b)
        {
          /* 使用 glibc 的 printf；只为产生依赖 */
          printf("[libadd] %d + %d = %d\n", a, b, a + b);
          return a + b;
        }
        EOF

        cat > main.c <<'EOF'
        #include <stdio.h>
        #include "add.h"
        int main(void)
        {
          int result = add(2, 3);
          printf("[main] result = %d\n", result);
          return 0;
        }
        EOF

    # ② 编译共享库
    - name: Build libadd.so
      run: |
        gcc -fPIC -shared add.c -o libadd.so
        echo "---- ldd libadd.so ----"
        ldd libadd.so

    # ③ 编译并运行测试程序（确保 22.04 可用）
    - name: Build & run test program
      run: |
        gcc main.c -L. -ladd -Wl,-rpath='$ORIGIN' -o test
        echo "---- Run on 22.04 ----"
        ./test

    # ④ 上传 artifact
    - name: Upload libadd.so & headers
      uses: actions/upload-artifact@v4
      with:
        name: libadd
        path: |
          libadd.so
          add.h

################################################################################
# Job-2: 在 Ubuntu 24.04 下载并重测
################################################################################
  test-ubuntu-2404:
    needs: build-ubuntu-2204
    runs-on: ubuntu-24.04

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: libadd
        path: lib

    - name: Show ldd result of 22.04-built .so
      run: |
        echo "---- ldd lib/libadd.so (on 24.04) ----"
        ldd lib/libadd.so

    # 生成新的主程序并链接到 22.04 生成的 so
    - name: Build executable on 24.04
      run: |
        cat > main.c <<'EOF'
        #include <stdio.h>
        #include "add.h"
        int main(void)
        {
          int r = add(10, 20);
          printf("[24.04 main] 10 + 20 = %d\n", r);
          return 0;
        }
        EOF

        gcc main.c -Ilib -Llib -ladd \
            -Wl,-rpath='$ORIGIN/lib' -o test

    - name: Run test program on 24.04
      run: |
        echo "---- Run on 24.04 ----"
        LD_LIBRARY_PATH=./lib ./test