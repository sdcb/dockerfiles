name: Build and Test libaom

on: 
  push:
    branches: [ "main" ]
    paths: [ ".github/workflows/libaom.yml" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake yasm git build-essential

    - name: Clone libaom source
      run: git clone https://aomedia.googlesource.com/aom/

    - name: Configure and build
      run: |
        mkdir -p aom/build
        cd aom/build
        cmake -DBUILD_SHARED_LIBS=ON -DENABLE_DOCS=OFF -DENABLE_TESTS=OFF ..
        make -j$(nproc)

    - name: Debug file structure
      run: |
        echo "==== Build dir structure ===="
        find aom/build -name '*.h' -ls
        echo "==== Config headers ===="
        ls -l aom/build/config/

    - name: Create dist directory
      run: |
        mkdir -p dist/include dist/lib
        # 拷贝动态库文件（包含版本符号链接）
        cp -P aom/build/*.so* dist/lib/
        # 拷贝主头文件目录
        cp -R aom/aom/*.h dist/include/
        # 拷贝构建生成的配置头文件（修正路径）
        cp aom/build/config/*.h dist/include/
        # 添加版本信息头文件（如果存在）
        [ -f aom/build/aom_version.h ] && cp aom/build/aom_version.h dist/include/

    - name: Write test program
      run: |
        cat << 'EOF' > test_aom.c
        #include <aom/aom.h>
        #include <stdio.h>

        int main() {
            printf("AOM version: %s\n", aom_codec_version_str());
            return 0;
        }
        EOF

    - name: Compile and test
      run: |
        gcc test_aom.c -I./dist/include -L./dist/lib -laom -o test_aom
        LD_LIBRARY_PATH=./dist/lib ./test_aom

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: libaom-artifacts
        path: |
          dist/include
          dist/lib