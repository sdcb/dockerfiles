name: paddle-windows-build
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/paddle-windows-build.yml'
  workflow_dispatch:

env:
  PADDLE_VERSION: "3.0.0"
  PADDLE_BRANCH: "v3.0.0"

jobs:
  build-all:
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          - { name: openblas_noavx, cmake_flags: "-DWITH_AVX=OFF -DWITH_MKL=OFF" }
          - { name: openblas,       cmake_flags: "-DWITH_AVX=ON  -DWITH_MKL=OFF" }
          - { name: mkldnn,         cmake_flags: "-DWITH_AVX=ON  -DWITH_MKL=ON"  }
    steps:
      - name: Setup dependencies
        run: |
          git config --global core.longpaths true
          pip3 install numpy protobuf wheel ninja

      - name: Checkout Paddle repo
        uses: actions/checkout@v4
        with:
          repository: PaddlePaddle/Paddle
          ref: ${{ env.PADDLE_BRANCH }}
          path: paddle-src
          submodules: true
          fetch-depth: 1

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: '14.29'

      - name: Configure with CMake
        run: |
          mkdir ./paddle-src/build
          mkdir ./paddle-src/build/paddle/phi/ops/yaml/inconsistent
          mkdir ./paddle-src/build/paddle/phi/ops/yaml/legacy

          cd ./paddle-src/build

          cmake .. -GNinja `
            ${{ matrix.cmake_flags }} `
            -DWITH_GPU=OFF `
            -DON_INFER=ON `
            -DWITH_PYTHON=OFF `
            -DWITH_ONNXRUNTIME=ON `
            -DWITH_UNITY_BUILD=ON

      - name: Build with Ninja
        run: |
          cd ./paddle-src/build
          ninja all

      - name: Show build files
        run: |
          tree /f ./paddle-src/build

      - name: Upload paddle_inference_c_install_dir
        uses: actions/upload-artifact@v4
        with:
          name: c_${{ matrix.name }}
          path: ./paddle-src/build/paddle_inference_c_install_dir/*

      - name: Upload paddle_inference_install_dir
        uses: actions/upload-artifact@v4
        with:
          name: cpp_${{ matrix.name }}
          path: ./paddle-src/build/paddle_inference_install_dir/*
    
  # cu120-sm86-89:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Build
  #       run: |
  #         cd ./.github/workflows/paddle-windows-build
  #         docker run -e PADDLE_VERSION=2.6.1 -e PADDLE_BRANCH=release/2.6 -v ${PWD}\paddle-windows-build:C:\scripts --name build sdflysha/msvc2019-cu120:latest C:\scripts\cu120-sm86-89.ps1
      
  #     - name: copy artifacts
  #       run: |
  #         docker create --name build build
  #         docker cp build:D:\Paddle\Build\build.zip .
  #         docker rm build
    
  # cu120-sm61-75:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Build
  #       run: |
  #         cd ./.github/workflows/paddle-windows-build
  #         docker run -e PADDLE_VERSION=2.6.1 -e PADDLE_BRANCH=release/2.6 -v ${PWD}\paddle-windows-build:C:\scripts --name build sdflysha/msvc2019-cu120:latest C:\scripts\cu120-sm86-89.ps1
      
  #     - name: copy artifacts
  #       run: |
  #         docker create --name build build
  #         docker cp build:D:\Paddle\Build\build.zip .
  #         docker rm build
    
  # cu120-sm80:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Build
  #       run: |
  #         cd ./.github/workflows/paddle-windows-build
  #         docker run -e PADDLE_VERSION=2.6.1 -e PADDLE_BRANCH=release/2.6 -v ${PWD}\paddle-windows-build:C:\scripts --name build sdflysha/msvc2019-cu120:latest C:\scripts\cu120-sm80.ps1
      
  #     - name: copy artifacts
  #       run: |
  #         docker create --name build build
  #         docker cp build:D:\Paddle\Build\build.zip .
  #         docker rm build
    